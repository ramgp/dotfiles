- include: fedora.yml
  when: ansible_distribution == 'Fedora'

- include: ubuntu.yml
  when: ansible_os_family == 'Debian'

- name: Check for .zshenv
  stat: path="{{dotfiles_user_home}}/.zshenv"
  register: zshenv

- name: Back up .zshenv
  command: cp "{{dotfiles_user_home}}/.zshenv" "{{dotfiles_user_home}}/.zshenv.bak"
  args:
    creates: "{{dotfiles_user_home}}/.zshenv.bak"
  when: zshenv.stat.exists

- name: Remove .zshenv
  command: rm "{{dotfiles_user_home}}/.zshenv"
  when: zshenv.stat.exists

- name: Symlink .zshenv
  file:
    src: "{{ dotfiles_home }}/.zshenv"
    dest: "{{dotfiles_user_home}}/.zshenv"
    state: link

- name: Check for zinit installation
  stat: "path={{xdg_config_home}}/zsh/.zinit/bin"
  register: zinit

- name: Clone zinit repository
  git:
    repo: https://github.com/z-shell/zinit.git
    dest: "{{xdg_config_home}}/zsh/.zinit/bin"
  when: not zinit.stat.exists

- name: Check for .zshrc
  stat: path="{{xdg_config_home}}/zsh/.zshrc"
  register: zshrc

- name: Back up .zshrc
  command: cp "{{xdg_config_home}}/zsh/.zshrc" "{{xdg_config_home}}/zsh/.zshrc.bak"
  args:
    creates: "{{xdg_config_home}}/zsh/.zshrc.bak"
  when: zshrc.stat.exists

- name: Remove .zshrc
  command: rm "{{xdg_config_home}}/zsh/.zshrc"
  when: zshrc.stat.exists

- name: Symlink all zsh config files
  file:
    src: "{{ dotfiles_home }}/roles/zsh/files/{{item}}"
    dest: "{{xdg_config_home}}/zsh/.{{item}}"
    state: link
  with_items:
    - "zshrc"
    - "p10k.zsh"
