[hub]
  protocol = https
[user]
  name = {{ full_name }}
  email = {{ git_email }}
[github]
  user = {{ git_user }}
[url "https://bitbucket.org/"]
  insteadOf = bb:
[url "https://github.com/"]
  insteadOf = gh:
[url "https://gist.github.com/"]
  insteadOf = gist:
[push]
  default = current
  followTags = true
[core]
  trustctime = false
  autocrlf = input
  editor = "subl -n -w"
  filemode = false
  excludesfile = ~/.gitignore_global
[color]
  ui = true
  branch = auto
  diff = auto
  status = auto
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = 11
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[merge]
  tool = vimdiff
[mergetool]
  keepTemporaries = false
  keepBackup = false
  prompt = false
  trustExitCode = false
[difftool]
  prompt = false
[alias]
  last = log -1 --stat
  a = add
  ca = commit -a
  cam = commit -am
  cm = commit -m
  st = status
  s = status
  c = checkout
  co = checkout
  cob = checkout -b
  pu = push -u
  dft = difftool
  mgt = mergetool
  cp = cherry-pick
  cl = clone
  sst = status -sb
  lg2 = log -p
  lol = log --graph --decorate --oneline
  lola = log --graph --decorate --oneline --all
  br = branch
  dc = diff --cached
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all
  lh = rev-parse --short HEAD
  noff = merge --no-ff
  plr = pull --rebase
  amend = commit --amend
  wip = commit --no-verify -am "WIP"
  br = branch
  rn = branch -m
  # diff-so-fancy
  # https://github.com/so-fancy/diff-so-fancy/#usage
  df = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
  dfs = df --staged
  # Get changes for a single commit
  dfc = "!dfc() { git df $1^ $1; }; dfc"

  please = push --force-with-lease
  publish = "!git push -u origin $(git rev-parse --abbrev-ref HEAD)"
  # publish current branch
  publish = "!f() { git push -u ${1:-origin} $(git rev-parse --abbrev-ref HEAD); }; f"

  # http://gggritso.com/human-git-aliases
  unstage = reset -q HEAD --
  discard = checkout --
  uncommit = reset --mixed HEAD~

  l = log --graph --decorate --oneline --abbrev-commit --all
  h = log --graph --decorate --oneline --abbrev-commit

  issues = !hub browse -- issues
  url = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha; }; f"

  remote-branches = "!f() { git ls-remote --heads ${1:origin} | sed 's?.*refs/heads/??'; }; f "
